"""feedback table

Revision ID: 8bfb3b2a3c37
Revises: 8c09d171b39b
Create Date: 2024-02-01 17:09:05.356098

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "8bfb3b2a3c37"
down_revision: Union[str, None] = "8c09d171b39b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_correlationmatrix_recorded_at", table_name="correlationmatrix")
    op.drop_index("ix_correlationmatrix_user_id", table_name="correlationmatrix")
    op.drop_table("correlationmatrix")
    op.add_column(
        "feedback",
        sa.Column(
            "weekly_delta_information",
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=False,
        ),
    )
    op.add_column(
        "feedback",
        sa.Column(
            "advice_on_variance", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
    )
    op.add_column(
        "feedback",
        sa.Column(
            "advice_on_checklist", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
    )
    op.add_column(
        "feedback",
        sa.Column(
            "advice_on_goals", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
    )
    op.add_column(
        "feedback",
        sa.Column(
            "advice_best_days", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
    )
    op.add_column(
        "feedback",
        sa.Column(
            "advice_worst_days", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
    )
    op.add_column(
        "feedback",
        sa.Column(
            "advice_based_on_warped_perspective",
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=False,
        ),
    )
    op.add_column(
        "feedback",
        sa.Column(
            "advice_prev_feedback", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
    )
    op.add_column(
        "feedback",
        sa.Column(
            "advice_on_variance_categories",
            postgresql.ARRAY(sa.String()),
            nullable=True,
        ),
    )
    op.add_column(
        "feedback", sa.Column("warped_perspective", sa.Boolean(), nullable=False)
    )
    op.drop_column("feedback", "feedback_wellbeing_patterns")
    op.drop_column("feedback", "feedback_goal")
    op.drop_column("feedback", "feedback")
    op.drop_column("feedback", "feedback_correlation")
    op.drop_column("feedback", "checklist_item_ids")
    op.drop_column("feedback", "feedback_checklist_completion")
    op.drop_column("feedback", "correlation_matrix_id")
    op.drop_column("feedback", "checklist_item_names")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "feedback",
        sa.Column(
            "checklist_item_names",
            postgresql.ARRAY(sa.VARCHAR()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "feedback",
        sa.Column(
            "correlation_matrix_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "feedback",
        sa.Column(
            "feedback_checklist_completion",
            sa.VARCHAR(),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "feedback",
        sa.Column(
            "checklist_item_ids",
            postgresql.ARRAY(sa.INTEGER()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "feedback",
        sa.Column(
            "feedback_correlation", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "feedback",
        sa.Column("feedback", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "feedback",
        sa.Column("feedback_goal", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "feedback",
        sa.Column(
            "feedback_wellbeing_patterns",
            sa.VARCHAR(),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.drop_column("feedback", "warped_perspective")
    op.drop_column("feedback", "advice_on_variance_categories")
    op.drop_column("feedback", "advice_prev_feedback")
    op.drop_column("feedback", "advice_based_on_warped_perspective")
    op.drop_column("feedback", "advice_worst_days")
    op.drop_column("feedback", "advice_best_days")
    op.drop_column("feedback", "advice_on_goals")
    op.drop_column("feedback", "advice_on_checklist")
    op.drop_column("feedback", "advice_on_variance")
    op.drop_column("feedback", "weekly_delta_information")
    op.create_table(
        "correlationmatrix",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("recorded_at", sa.DATE(), autoincrement=False, nullable=False),
        sa.Column(
            "data_json",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], name="correlationmatrix_user_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="correlationmatrix_pkey"),
    )
    op.create_index(
        "ix_correlationmatrix_user_id", "correlationmatrix", ["user_id"], unique=False
    )
    op.create_index(
        "ix_correlationmatrix_recorded_at",
        "correlationmatrix",
        ["recorded_at"],
        unique=False,
    )
    # ### end Alembic commands ###
